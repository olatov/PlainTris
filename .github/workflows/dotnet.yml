# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install wasm-tools
      run: dotnet workload install wasm-tools
    - name: Restore dependencies
      run: dotnet restore src/PlainTris.BlazorWasmUI/PlainTris.BlazorWasmUI.csproj
    - name: Build & publish project
      run: dotnet publish src/PlainTris.BlazorWasmUI/PlainTris.BlazorWasmUI.csproj -c Release --output release --nologo
      
    # changes the base-tag in index.html from '/' to 'plaintris' to match GitHub Pages repository subdirectory
    # - name: Change base-tag in index.html from / to plaintris
    #   run: sed -i 's/<base href="\/" \/>/<base href="\/plaintris\/" \/>/g' release/wwwroot/index.html
      
    # changes for segmentCount value in 404.html as appropriate for Github Pages
    #- name: Set segmentCount in 404.html
    #  run: sed -i 's/var segmentCount = 0;/var segmentCount = 1;/g' release/wwwroot/404.html
      
    - name: Fix service-worker-assets.js hashes
      working-directory: release/wwwroot
      run: |
        jsFile=$(service-worker-assets.js)
        # remove JavaScript from contents so it can be interpreted as JSON
        json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
        # grab the assets JSON array
        assets=$(echo "$json" | jq '.assets[]' -c)
        for asset in $assets
        do
          oldHash=$(echo "$asset" | jq '.hash')
          #remove leading and trailing quotes
          oldHash="${oldHash:1:-1}"
          path=$(echo "$asset" | jq '.url')
          #remove leading and trailing quotes
          path="${path:1:-1}"
          newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
          
          if [ $oldHash != $newHash ]; then
            # escape slashes for json
            oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
            newHash=$(echo "$newHash" | sed 's;/;\\/;g')
            echo "Updating hash for $path from $oldHash to $newHash"
            # escape slashes second time for sed
            oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
            jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
          fi
        done

        echo -n "$jsFile" > service-worker-assets.js      

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      
    - name: Uploading files to gh-pages branch
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages
        folder: release/wwwroot

